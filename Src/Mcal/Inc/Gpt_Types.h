/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Gpt_Types.h
 *       Module:  -
 *
 *  Description:  Header file for data type definitions for GPT module driver    
 *  
 *********************************************************************************************************************/
#ifndef GPT_TYPES_H
#define GPT_TYPES_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Std_Types.h"
#include "Gpt.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/

/*
    Numeric ID of a GPT Type
/***************************************************************/
typedef enum
{
    GPT_16_32_TIMER0,
    GPT_16_32_TIMER1,
    GPT_16_32_TIMER2,
    GPT_16_32_TIMER3,
    GPT_16_32_TIMER4,
    GPT_16_32_TIMER5,
    GPT_32_64_TIMER0 = 0,
    GPT_32_64_TIMER1,
    GPT_32_64_TIMER2,
    GPT_32_64_TIMER3,
    GPT_32_64_TIMER4,
    GPT_32_64_TIMER5
}Gpt_ChannelType;

/*
    Type for reading and setting the timer value (in number of ticks)
/***************************************************************/
typedef enum
{

}Gpt_ValueType;

/*
    Mode Type
/***************************************************************/
typedef enum
{
    GPT_MODE_NORMAL,
    GPT_MODE_SLEEP                 
}Gpt_ModeType;

/*
    Channel Mode Type
/***************************************************************/
typedef enum
{
    GPT_CH_MODE_CONTINUOUS,
    GPT_CH_MODE_ONSHOT               
}Gpt_CH_ModeType;

/*
    Pre-defined Timer Type
/***************************************************************/
typedef enum
{
    GPT_PREDEF_TIMER_1US_16BIT,
    GPT_PREDEF_TIMER_1US_24BIT,
    GPT_PREDEF_TIMER_1US_32BIT,
    GPT_PREDEF_TIMER_100US_32BIT                 
}Gpt_PredefTimerType;

/*
    Pre-defined Timer Configuration Type
/***************************************************************/
typedef struct
{
    Gpt_ChannelType ChannelID;
    uint16          ChannelTickFrequency;
    Gpt_ValueType   ChannelTickValueMax;
    Gpt_CH_ModeType ChannelMode;

}Gpt_CfgType;


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

 
#endif  /*GPT_TYPES_H*/

/**********************************************************************************************************************
 *  END OF FILE: Gpt_Types.h
 *********************************************************************************************************************/
